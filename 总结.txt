1.有很多地方没做好：如多条插入回显，代码太过冗余，支付只做了成功回调等。
2.所有的分页都是用的sublist。
3.数据没有后台验证，只做了前端验证，且密码和身份证号码为了方便没有加密---》可以通过shiro加密工具加密。
4.sql没有经过优化，特别是其中学生的班级的子查询和联合查询，效率很低。
5.支付宝的异步回调参数没看明白，存在session丢失，所以在回调的时候重新穿了userID获取session。
5.实体类有许多重复的地方，特别是Dto实体类和pojo中student、emp、user三个实体类。可以去掉user，登录用户返回session封装成统一的dto->user。
6.数据库表设计有不合理的地方，如没有财务表，所以我把缴费完全集合在了学生表身上，每个学期的缴费都在student表上，显得有些臃肿。
7.没有做课程管理，所以缴费全是1.0块-->可以做一个课程管理，然后做一个完整的付费。
8.可以添加上微信接口和银行接口。
9.行操作按钮没有做完（比较简单，学生、班级、宿舍的详情按钮做了，编辑、删除按钮没做）
ps:后面的行操作按钮不完全都做，有的按钮只是在写前端的时候直接CV过去的一套按钮，没有每个都设计。
10.文件的下载没有用输出流，可能有的浏览器无法下载，谷歌和EDge应该是没问题的。
11.没有做浏览器兼容，有的地方在不同浏览器看起来不一样，比如文件框。
12.报到流程可以添加一个宿舍报到，加一个微信小程序，就一个扫码宿舍报到，现在很多学校都这么做的。
13.登陆界面超级丑。
14.没有做权限管理，可以直接越过前端进行其他操作。（可以用Spring全家桶的安全框架或者shiro安全框架）

ps:这个srsmsystem是自己学习的项目，对SpringBoot、Spring、SpringMVC、Mybatis的一个总结。
学习了各种子查询联合查询SQL（微笑脸），thymeleaf模板用着开始的时候项目搭建就用了很久，各种bug，只要有一点儿错都不行。
前端样式写得不是很美观，自己也没有怎么去调样式，基本都是直接在layui官网上拉取的。为了做前端验证，学了半天正则表达式......
基本功能：
1.定位（除了Edge浏览器上其他浏览器存在经纬度偏差，地理位置偏移超过10KM）
2.Excel操作（Apach的POI，做了导入解析，没有做导出，两个为逆向操作，导出可以做在批量导入之后，或者查询学生那里）
3.付费（支付宝接口，做的不是很好，没有严谨地做完全部接口，且参数设置不完全合理）
4.统计表（用的Echarts和highcharts，一样做了简单做了一个，一个饼状图一个柱状图）
5.一般得增删改查。
6.职工号和学号密码都是自动的，不需要手动输入（学号怎么来的我没有了解，可以改变一下自动生成的规则）
7.获取IP地址的工具用的sohu，但是应该是给我IP地址拉黑了，短时间次数多了就拒绝访问了后来百度变了一种，真香（但是没第一种的的快）。

说明：
sql文件附在下方，数据清空了的，手动弄一个管理员账户就能玩了。
付费接口在studentController里面，使用自己的key就OK。异步回调的时候要用内网击穿工具或者发布在服务器上（阿里，腾讯之类都行），netapp，百度一下下载就行。操作简单。
